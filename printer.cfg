# This file contains common configurations and pin mappings for the Prusa
# Mini+, which uses the Prusa Buddy board. The printer's LCD is not currently
# supported by Klipper, so the touchscreen will permanently display the
# bootloader screen after the Klipper firmware is flashed; use Fluidd, Mainsail,
# or OctoPrint etc. to control the printer.

# To use this config, the firmware should be compiled for the STM32F407. When
# running "make menuconfig", enable "extra low-level configuration setup",
# select the "128KiB + 512 byte offset" bootloader, and USB communication.
# Connect the printer to your Raspberry Pi using the printer's micro-USB port.
# If you prefer to remove Prusa's stock bootloader entirely, select the
# "No bootloader" option.

# When flashing for the first time, you will need to break the "appendix"
# on the Buddy board, then put the device into DFU mode by moving the jumper
# on the 3-pin header (older boards) or shorting the 2-pin header (newer boards)
# and resetting, and finally use "make flash" to install Klipper. Once Klipper is
# installed, you no longer need the jumper - just use "make flash" which will
# automatically put the device into DFU mode.

# Note that if you were previously running Prusa firmware, you must fully
# power cycle the board after flashing. Otherwise, Klipper will be unable to
# communicate with the TMC2209s due to the abrupt change in the baud rate,
# and will show this error: "Unable to read tmc uart register IFCNT".

# See docs/Config_Reference.md for a description of parameters.

[include macros.conf]
# [include smuff.cfg]
[include bunny_smuff.conf]

[idle_timeout]
gcode:
  _KM_IDLE_TIMEOUT

[pause_resume]
[respond]
[gcode_arcs]
[display_status]
[exclude_object]

[force_move]
enable_force_move: False

[save_variables]
filename: ~/klipper_config/variables.conf

[virtual_sdcard]
path: ~/gcode_files

[stepper_x]
step_pin: PD1
dir_pin: PD0
enable_pin: !PD3
microsteps: 16
rotation_distance: 32  # 200 * 16 / 100
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 180.5
position_min: -14.5
position_max: 180.5
homing_speed: 50
homing_retract_dist: 0

[stepper_y]
step_pin: PD13
dir_pin: PD12
enable_pin: !PD14
microsteps: 16
rotation_distance: 32  # 200 * 16 / 100
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: -3
position_min: -3
position_max: 180
homing_speed: 50
homing_retract_dist: 0

[stepper_z]
step_pin: PD4
dir_pin: !PD15
enable_pin: !PD2
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_min: 0
position_max: 190

[extruder]
step_pin: PD9
dir_pin: PD8
enable_pin: !PD10
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 7.708 #7.7077590361445783132530120478676 # 200 * 16 / 415. the formulae is full rotation microsteps  * microsteps / e-steps. to be used ONLY WITHOUT gear ratio
#rotation_distance: 22.67895109851169383416017009 # (200 * 16 * 50/17) / 415. formulae is (full rotation microsteps * microsteps pert turn * gear ratio) / e-steps. this can only be used in combination with gear ratio
#gear_ratio: 50:17
nozzle_diameter: 0.200
filament_diameter: 1.750
heater_pin: PB1
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC0
min_temp: 10
max_temp: 305
max_extrude_only_distance: 1000.0
min_extrude_temp: 170.0

[tmc2209 stepper_x]
uart_pin: PD5
uart_address: 1
diag_pin: ^PE2
driver_SGTHRS: 130
run_current: 0.45
sense_resistor: 0.22
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PD5
uart_address: 3
diag_pin: ^PE1
driver_SGTHRS: 130
run_current: 0.45
sense_resistor: 0.22
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PD5
uart_address: 0
diag_pin: ^PE3
driver_SGTHRS: 100
run_current: 0.45
sense_resistor: 0.22
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PD5
uart_address: 2
diag_pin: ^PA15
driver_SGTHRS: 100
run_current: 0.4
sense_resistor: 0.22

[heater_bed]
heater_pin: PB0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA4
min_temp: 10
max_temp: 110

# Hotend fan.
# The stock firmware uses control ranges of PWM 0-50%, RPM 1000-8000.
# Change fan_speed below to match your preference. Measured speeds:
#   fan_speed 0.5:  50% PWM = 4000RPM (Prusa stock default speed)
#   fan_speed 1.0: 100% PWM = 8000RPM (safe but loud)
[heater_fan hotend_fan]
pin: PE9
tachometer_pin: PE14
fan_speed: 0.5

# Part cooling fan.
# The stock firmware uses control ranges of PWM 10-50%, RPM 500-5000.
# To match stock firmware, set the Klipper fan speed to 50%. This speed
# can be safely increased to 100% for better part cooling. Measured speeds:
#    50% PWM = 2500RPM (Prusa stock default speed)
#   100% PWM = 5000RPM (better cooling, still quiet)
[fan]
pin: PE11
tachometer_pin: PE10

# The SuperPINDA has built-in temperature compensation and no thermistor output,
# so no compensation table is needed here.
[probe]
pin: PA8
x_offset: -29
y_offset: -3
#z_offset: 0.683  # set this to your Live Z Offset, but negated (invert the sign)
speed: 6.0

[safe_z_home]
home_xy_position: 147.4, 21.1
z_hop: 4

[bed_mesh]
speed: 100
horizontal_move_z: 5
mesh_min: 10, 10
mesh_max: 141, 167
probe_count: 4, 4

[filament_switch_sensor filament_sensor]
switch_pin: ^PB4
pause_on_runout: True

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_2A0035000647303033333839-if00
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 250
max_accel: 5000
max_z_velocity: 14
max_z_accel: 440

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 38.264
#*# pid_ki = 4.724
#*# pid_kd = 77.485
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 56.639
#*# pid_ki = 1.334
#*# pid_kd = 601.085
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.008750, 0.017500, 0.031250, 0.011250
#*# 	0.020000, 0.025000, 0.022500, 0.018750
#*# 	0.010000, 0.040000, 0.018750, 0.061250
#*# 	0.046250, 0.018750, 0.083750, 0.022500
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 140.98
#*# min_y = 10.0
#*# max_y = 166.99
#*#
#*# [probe]
#*# z_offset = 0.209
