[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2B0054000250415339373620-if00
restart_method: command

[temperature_sensor mainboard]
sensor_type: temperature_mcu

[stepper_x]
enable_pin: !PB14
step_pin: PB13
dir_pin: PB12
microsteps: 16
rotation_distance: 32  # 200 * 16 / 100
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PC11
uart_address: 0
diag_pin: ^PC0
driver_SGTHRS: 93  # max 160. min 60. 60 + (160 - 60) / 3
run_current: 0.45
sense_resistor: 0.110
stealthchop_threshold: 999999
interpolate: false

[stepper_y]
enable_pin: !PB11
step_pin: PB10
dir_pin: PB2
microsteps: 16
rotation_distance: 32  # 200 * 16 / 100
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PC11
uart_address: 2
diag_pin: ^PC1
driver_SGTHRS: 114 # max 165. min 88. 88 + (165 - 88) / 3
run_current: 0.45
sense_resistor: 0.110
stealthchop_threshold: 999999
interpolate: false

[stepper_z]
enable_pin: !PB1
step_pin: PB0
dir_pin: !PC5
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop

[tmc2209 stepper_z]
uart_pin: PC11
uart_address: 1
diag_pin: ^PC2
driver_SGTHRS: 70
run_current: 0.45
sense_resistor: 0.110
stealthchop_threshold: 999999
interpolate: false

[extruder]
enable_pin: !PD1
step_pin: PB3
dir_pin: PB4
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 7.708 #7.7077590361445783132530120478676 # 200 * 16 / 415. the formulae is full rotation microsteps  * microsteps / e-steps. to be used ONLY WITHOUT gear ratio
nozzle_diameter: 0.4
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
min_temp: 10
max_temp: 305
max_extrude_only_distance: 1000.0
min_extrude_temp: 170.0

[tmc2209 extruder]
uart_pin: PC11
uart_address: 3
diag_pin: ^PA15
driver_SGTHRS: 70
run_current: 0.4
sense_resistor: 0.110
# stealthchop_threshold: 999999
interpolate: false

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
min_temp: 10
max_temp: 110

# Hotend fan.
# The stock firmware uses control ranges of PWM 0-50%, RPM 1000-8000.
# Change fan_speed below to match your preference. Measured speeds:
#   fan_speed 0.5:  50% PWM = 4000RPM (Prusa stock default speed)
#   fan_speed 1.0: 100% PWM = 8000RPM (safe but loud)
[heater_fan hotend_fan]
pin: PC6
fan_speed: 0.5

# Part cooling fan.
# The stock firmware uses control ranges of PWM 10-50%, RPM 500-5000.
# To match stock firmware, set the Klipper fan speed to 50%. This speed
# can be safely increased to 100% for better part cooling. Measured speeds:
#    50% PWM = 2500RPM (Prusa stock default speed)
#   100% PWM = 5000RPM (better cooling, still quiet)
[fan]
pin: PB15

# The SuperPINDA has built-in temperature compensation and no thermistor output,
# so no compensation table is needed here.
[probe]
pin: PA1

[filament_switch_sensor filament_sensor]
switch_pin: ^PC14
pause_on_runout: True
